---
Description: AWS AppSync Questionnaires API

Parameters:
  APIName:
    Type: String
    Description: Name of the API - used to generate unique names for resources
    MinLength: 3
    MaxLength: 20
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
  SourceBucket:
    Type: String
    Description: Bucket where the source is copied by the previous stage
    MinLength: 10
    MaxLength: 255

Resources:
  CognitoPool:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        Fn::Sub: "${SourceBucket}/infra/cognito.yml"
      Parameters:
        APIName: 
          Ref: APIName
  DynamoDBRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${APIName}-appsync-dynamodb-role
      ManagedPolicyArns:
        - Ref: AppSyncDynamoDBPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com
    DependsOn:
      - AppSyncDynamoDBPolicy

  AppSyncDynamoDBPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Managed policy to allow AWS AppSync to access the tables created by this template.
      Path: /appsync/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:UpdateItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
            Resource: !Join [ "", [ !GetAtt QuestionnairesTable.Arn, "*" ] ]

  QuestionnairesTable:
    Type: "AWS::DynamoDB::Table"
    Description: "Data store for AWS AppSync Questionnaires Type"
    Properties:
      TableName: !Sub ${APIName}-questionnaires-table
      AttributeDefinitions:
        - AttributeName: "QuestionnaireId"
          AttributeType: "S"
        - AttributeName: "UserId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "QuestionnaireId"
          KeyType: "HASH"
        - AttributeName: "UserId"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  AppSyncApi:
    Type: "AWS::AppSync::GraphQLApi"
    Description: "The GraphQL API for the Questionnaires App"
    Properties:
      AuthenticationType: "AMAZON_COGNITO_USER_POOLS"
      Name: !Sub ${APIName}
      UserPoolConfig:
        UserPoolId: 
          Fn::GetAtt:
          - CognitoPool
          - Outputs.UserPoolId
        AwsRegion: !Sub ${AWS::Region}
        DefaultAction: "ALLOW"
  AppSyncSchema:
    Type: "AWS::AppSync::GraphQLSchema"
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      Definition: |
        type Questionnaire {
          QuestionnaireId: ID!
          title: String
          content: String
        }
        type Questionnaires {
          questionnaires: [Questionnaire!]!
        }
        type Query {
          getQuestionnaires(limit: Int, nextToken: String): Questionnaires!
          getQuestionnaire(QuestionnaireId: ID!): Questionnaire
        }
        type Mutation {
          saveQuestionnaire(QuestionnaireId: ID!, title: String!, content: String!): Questionnaire
          deleteQuestionnaire(QuestionnaireId: ID!): Questionnaire
        }
        type Schema {
          query: Query
          mutation: Mutation
        }
  AppSyncQuestionnairesTableDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      Name: !Sub ${APIName}_questionnaires
      Description: "The Questionnaires Table AppSync Data Source"
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !GetAtt DynamoDBRole.Arn
      DynamoDBConfig:
        TableName: !Ref QuestionnairesTable
        AwsRegion: !Sub ${AWS::Region}

  AppSyncAllQuestionnairesQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: AppSyncSchema
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      TypeName: Query
      FieldName: getQuestionnaires
      DataSourceName: !GetAtt AppSyncQuestionnairesTableDataSource.Name
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "Scan"
        }
      ResponseMappingTemplate: |
        {
          "questionnaires": $util.toJson($ctx.result.items)
        }
  AppSyncGetQuestionnaireQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: AppSyncSchema
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      TypeName: Query
      FieldName: getQuestionnaire
      DataSourceName: !GetAtt AppSyncQuestionnairesTableDataSource.Name
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "GetItem",
          "key": {
            "QuestionnaireId": $util.dynamodb.toDynamoDBJson($ctx.args.QuestionnaireId),
            "UserId": $util.dynamodb.toDynamoDBJson($ctx.identity.sub)
          }
        }
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncSaveQuestionnaireMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: AppSyncSchema
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      TypeName: Mutation
      FieldName: saveQuestionnaire
      DataSourceName: !GetAtt AppSyncQuestionnairesTableDataSource.Name
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "PutItem",
          "key": {
            "QuestionnaireId": $util.dynamodb.toDynamoDBJson($ctx.args.QuestionnaireId),
            "UserId": $util.dynamodb.toDynamoDBJson($ctx.identity.sub)
          },
          "attributeValues": {
            "title": $util.dynamodb.toDynamoDBJson($ctx.args.title),
            "content": $util.dynamodb.toDynamoDBJson($ctx.args.content)
          }
        }
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncDeleteQuestionnaireMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: AppSyncSchema
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      TypeName: Mutation
      FieldName: deleteQuestionnaire
      DataSourceName: !GetAtt AppSyncQuestionnairesTableDataSource.Name
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "DeleteItem",
          "key": {
            "QuestionnaireId": $util.dynamodb.toDynamoDBJson($ctx.args.QuestionnaireId),
            "UserId": $util.dynamodb.toDynamoDBJson($ctx.identity.sub)
          }
        }
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

Outputs:
  CognitoUserPoolId:
    Description: The Pool ID of the Cognito User Pool
    Value: 
      Fn::GetAtt:
        - CognitoPool
        - Outputs.UserPoolId
  CognitoUserPoolClientId:
    Description: The Client ID for AWS AppSync Auth
    Value: 
      Fn::GetAtt:
        - CognitoPool
        - Outputs.UserPoolClientId
  QuestionnairesTable:
    Description: The name of the DynamoDB Table
    Value: !Ref QuestionnairesTable
  GraphQLApiEndpoint:
    Description: The URL to the GraphQL Endpoint
    Value: !GetAtt AppSyncApi.GraphQLUrl
  GraphQLApiId:
    Description: The API ID of the GraphQL API
    Value: !GetAtt AppSyncApi.ApiId
